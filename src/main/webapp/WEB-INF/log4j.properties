# initialize root logger with level ERROR for stdout and fout
log4j.rootLogger=DEBUG,stdout,fout,file


# set the log level for these components
log4j.logger.com.endeca=INFO
log4j.logger.com.endeca.itl.web.metrics=INFO

####### stdout(i.e console print display) Configuration ###################
# add a ConsoleAppender to the logger stdout to write to the console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
# add a pattern layout
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# messgae display format
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} : %-5p: %m%n
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

#use a simple message format
#log4j.appender.stdout.Target=System.out 
#2019-01-24 20:21:30 INFO  SiteSummary:254 - com.mps.insight.product.SiteSummary.getHighestAccessedIP(259) 

#############################################################################

############## fout (writing in file) ##########################

#disabling all fout file write options

# add a FileAppender to the logger fout
#log4j.appender.fout=org.apache.log4j.FileAppender

# create a log file
#log4j.appender.fout.File=/logs/insightstarlog.log
#log4j.appender.fout.layout=org.apache.log4j.PatternLayout

# use a more detailed message pattern
#log4j.appender.fout.layout.ConversionPattern=%p\t%d{ISO8601}\t%r\t%c\t[%t]\t%L - %m%n

